<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Nova Prime | Account </title>
  <link rel="icon" type="image/png" href="nova_favicon.png">
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 font-sans min-h-screen flex flex-col">

  <!-- Top Bar -->
  <header class="fixed top-0 left-0 w-full bg-white shadow p-4 flex justify-between items-center z-50">
    <h1 class="text-2xl font-bold text-green-600">Nova Prime</h1>
    <div class="text-sm text-gray-600">
      <span id="welcomeName">User</span><br />
      <span class="text-xs text-gray-500">User ID: <span id="userId">0000000000</span></span>
    </div>
  </header>

  <!-- Main Section -->
  <main class="max-w-5xl mx-auto mt-20 p-4 flex-grow">
    <!-- Balance Overview -->
    <section class="grid grid-cols-2 sm:grid-cols-2 md:grid-cols-4 gap-4 mb-8">
      <div class="bg-white p-4 sm:p-6 rounded-xl shadow text-center">
        <p class="text-gray-500 text-sm sm:text-base">Total Balance</p>
        <h2 id="totalBalance" class="text-xl sm:text-2xl font-bold text-green-600">$0.00</h2>
      </div>
      <div class="bg-white p-4 sm:p-6 rounded-xl shadow text-center">
        <p class="text-gray-500 text-sm sm:text-base">Available</p>
        <h2 id="availableBalance" class="text-lg sm:text-xl font-semibold">$0.00</h2>
      </div>
      <div class="bg-white p-4 sm:p-6 rounded-xl shadow text-center">
        <p class="text-gray-500 text-sm sm:text-base">Pending</p>
        <h2 class="text-lg sm:text-xl font-semibold">$0.00</h2>
      </div>
      <div class="bg-white p-4 sm:p-6 rounded-xl shadow text-center">
        <p class="text-gray-500 text-sm sm:text-base">Credits</p>
        <h2 id="creditBalance" class="text-lg sm:text-xl font-semibold">$0.00</h2>
      </div>
    </section>

    <!-- Action Buttons -->
    <section class="flex flex-wrap gap-4 mb-6">
      <a href="deposit" class="bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-lg">Deposit</a>
      <a href="withdraw" class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg">Withdraw</a>
      <a href="transfer" class="bg-gray-600 hover:bg-gray-700 text-white px-6 py-2 rounded-lg">Transfer</a>
    </section>

    <!-- Recent Transactions -->
    <section class="bg-white p-6 rounded-xl shadow min-h-[200px]">
      <h3 class="text-xl font-semibold mb-4 text-gray-800">Recent Transactions</h3>
      <ul class="space-y-4" id="transactionList"></ul>
    </section>
  </main>

  <footer class="bg-white border-t mt-12">
    <footer class="fixed bottom-0 left-0 w-full bg-white text-center py-4 text-gray-500 text-sm z-50 shadow">
      <p>&copy; 2025 Nova Prime Inc. All rights reserved.</p>
      <div class="space-x-4">
        <a href="privacy" class="hover:text-green-600">Privacy</a>
        <a href="terms" class="hover:text-green-600">Terms</a>
        <a href="help" class="hover:text-green-600">Help</a>
      </div>
    </footer>
  </footer>

  <script>
    const fullName = localStorage.getItem('fullName') || 'User';
    const mobileNumber = localStorage.getItem('mobileNumber') || '0000000000';
    let balance = parseFloat(localStorage.getItem('balance') || '0');
    const credits = parseFloat(localStorage.getItem('credits') || '0');
    let transactions = JSON.parse(localStorage.getItem('transactions') || '[]');
    const paidTasks = JSON.parse(localStorage.getItem('paidTasks') || '[]');
    let newPaymentAdded = false;

    // Add new task payments to transactions if not already logged
    paidTasks.forEach(task => {
      const alreadyLogged = transactions.some(tx => tx.id === task.id);
      if (!alreadyLogged) {
        const tx = {
          id: task.id,
          type: 'Task Payment',
          amount: task.amount,
          date: task.date,
          time: task.time,
          status: 'Paid'
        };
        transactions.push(tx);
        balance += parseFloat(task.amount);
        newPaymentAdded = true;
      }
    });

    // Save updated transactions and balance
    localStorage.setItem('transactions', JSON.stringify(transactions));
    localStorage.setItem('balance', balance.toFixed(2));

    if (newPaymentAdded) {
      const audio = new Audio('https://notificationsounds.com/storage/sounds/file-sounds-1150-pristine.mp3');
      audio.play();
    }

    // Display user info and balances
    document.getElementById('welcomeName').textContent = fullName;
    document.getElementById('userId').textContent = mobileNumber;
    document.getElementById('totalBalance').textContent = `$${(balance + credits).toFixed(2)}`;
    document.getElementById('availableBalance').textContent = `$${balance.toFixed(2)}`;
    document.getElementById('creditBalance').textContent = `$${credits.toFixed(2)}`;

    // Corrected formatDateTime function
    function formatDateTime(date, time) {
      if (!date && !time) return 'Unknown';
      if (date && date.includes(',') && !date.includes('at')) {
        const [dayPart, timePart] = date.split(',');
        return `${dayPart.trim()} at ${timePart.trim()}`;
      }
      return `${date || ''} at ${time || ''}`.trim();
    }

    // Sort transactions by date and time descending
    transactions.sort((a, b) => {
      const aDate = new Date(`${a.date} ${a.time}`);
      const bDate = new Date(`${b.date} ${b.time}`);
      return bDate - aDate;
    });

    const transactionList = document.getElementById('transactionList');
    if (transactions.length === 0) {
      transactionList.innerHTML = '<li class="text-gray-400 text-sm">No transactions yet.</li>';
    } else {
      transactionList.innerHTML = '';
      transactions.forEach(tx => {
        const li = document.createElement('li');
        const isDeposit = tx.type === 'Deposit' || tx.type === 'Task Payment';
        const isTransfer = tx.type === 'Transfer';
        li.className = `p-4 rounded-lg shadow border-l-4 ${
          isTransfer ? 'border-black bg-gray-50' : (isDeposit ? 'border-green-500 bg-green-50' : 'border-blue-500 bg-blue-50')
        }`;
        li.innerHTML = `
          <div class="flex justify-between items-center">
            <div>
              <p class="font-semibold text-gray-800">${tx.type}</p>
              <p class="text-xs text-gray-500">${formatDateTime(tx.date, tx.time)}</p>
            </div>
            <div class="text-right">
              <p class="text-lg font-bold ${
                isTransfer ? 'text-black' : (isDeposit ? 'text-green-600' : 'text-blue-600')
              }">
                ${isTransfer ? '-' : (isDeposit ? '+' : '-')} $${parseFloat(tx.amount).toFixed(2)}
              </p>
              <p class="text-xs text-gray-400 mt-1">${tx.status || 'Completed'}</p>
            </div>
          </div>
        `;
        transactionList.appendChild(li);
      });
    }
  </script>
</body>
</html>
